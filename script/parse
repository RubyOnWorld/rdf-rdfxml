#!/usr/bin/env ruby
require 'rubygems'
$:.unshift(File.expand_path(File.join(File.dirname(__FILE__), "..", 'lib')))
require 'rdf/rdfxml'
require 'getoptlong'

def parse(input, base)
  puts RDF::Writer.for($format.to_sym).buffer { |writer|
    RDF::RDFXML::Reader.new(input, :base_uri => base, :validate => true).each do |statement|
      writer << statement
    end
  }
end

$verbose = false
$format = :ntriples
base_uri  = "http://example.com"
input = nil

opts = GetoptLong.new(
  ["--debug", GetoptLong::NO_ARGUMENT],
  ["--verbose", GetoptLong::NO_ARGUMENT],
  ["--quiet", GetoptLong::NO_ARGUMENT],
  ["--format", GetoptLong::REQUIRED_ARGUMENT],
  ["--execute", "-e", GetoptLong::REQUIRED_ARGUMENT],
  ["--uri", GetoptLong::REQUIRED_ARGUMENT]
)
opts.each do |opt, arg|
  case opt
  when '--verbose' then $verbose = true
  when '--quiet' then $quiet = true
  when '--debug' then ::RDF::RDFXML::debug = true
  when '--execute' then input = arg
  when '--format' then $format = arg
  when '--uri' then base_uri = arg
  end
end

if ARGV.empty?
  s = input ? input : $stdin.read
  parse(StringIO.new(s), base_uri)
else
  ARGV.each do |test_file|
    parse(File.open(test_file), base_uri)
  end
end